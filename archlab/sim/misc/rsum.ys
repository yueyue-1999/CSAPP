.pos 0 #设置当前位置为0
irmovq stack, %rsp #设置栈指针
call main
halt

# Sample linked list
    .align 8
ele1:
    .quad 0x00a
    .quad ele2
ele2:
    .quad 0x0b0
    .quad ele3
ele3:
    .quad 0xc00
    .quad 0

main:
    irmovq ele1, %rdi #将链表的第一个元素的地址放入%rdi
    call rsum_list
    ret

rsum_list:
    pushq %rbx #callee-saved，要在使用前后pushq和popq
    xorq %rax, %rax #设置val=0
    andq %rdi, %rdi
    je finish
    mrmovq (%rdi), %rbx #从内存中取val的值放入rbx.
    mrmovq 8(%rdi), %rdi #rdi为elei的地址
    call rsum_list
    addq %rbx, %rax #从val=val+新读出的值
finish:
    popq %rbx
    ret

.pos 0x200
stack:
